version: 2.1
executors:
  ruby:
    docker:
      - image: circleci/ruby:2.4.3-stretch-node-browsers
    working_directory: ~/spot
    environment:
      BUNDLE_PATH: vendor/bundle

jobs:
  bundle:
    executor: ruby
    steps:
      - checkout
      - run:
          name: Use Bundler version specified in Gemfile.lock
          command: |
            sudo gem update --system
            sudo gem uninstall -i /usr/local/lib/ruby/gems/2.4.0 -aIx bundler
            sudo gem install -i /usr/local/lib/ruby/gems/2.4.0 bundler -v`(tail -n1 Gemfile.lock | xargs)`
      - restore_cache:
          name: Restore cached bundle
          key: spot-gems-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          name: Restore cached node_modules
          key: spot-node_modules-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies (ruby)
          command: bundle check || bundle install
      - run:
          name: Install dependencies (js)
          command: yarn install
      - save_cache:
          name: Store cache of bundle
          key: spot-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - save_cache:
          name: Store cache of node_modules
          key: spot-node_modules-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/
          paths:
            - spot/*
            - spot/**/*

  lint:
    executor: ruby
    steps:
    - attach_workspace:
        at: ~/
    - run:
        name: Get 'em Rubocop!
        command: bundle exec rubocop

  test:
    docker:
      - image: circleci/ruby:2.4.3-stretch-node-browsers
      - image: circleci/redis:4
      - image: postgres:9.4-alpine
        environment:
          POSTGRES_USER: spot_dev_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: spot_test
      - image: samvera/fcrepo4:4.7.5
        environment:
          CATALINA_OPTS: '-Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC'
      - image: solr:7.5.0-alpine
        command: bin/solr -cloud -noprompt -f -p 8983

    working_directory: ~/spot
    parallelism: 4

    environment:
      BUNDLE_PATH: vendor/bundle
      RAILS_ENV: test
      FEDORA_TEST_URL: http://localhost:8080/rest
      SOLR_TEST_URL: http://localhost:8983/solr/spot-test
      NOKOGIRI_USE_SYSTEM_LIBRARIES: true
      PSQL_USER: spot_dev_user
      PSQL_PASSWORD: password
      PSQL_DATABASE: spot_test
      CI: true
      CAS_BASE_URL: http://localhost
      URL_HOST: http://localhost
      IIIF_BASE_URL: http://localhost/iiif/2

    steps:
      - attach_workspace:
          at: ~/

      # Update to the latest release of Chrome
      - run: wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      - run: sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
      - run: sudo apt-get update
      - run: sudo apt-get -y install google-chrome-stable
      - run: google-chrome-stable --headless --disable-gpu -no-sandbox --browsertime.xvfb --remote-debugging-port=9222 http://localhost &

      - run:
          name: Make sure dependencies are valid
          command: bundle check || bundle install

      - run:
          name: Load config into Solr
          command: |
            cd solr/config
            zip -1 spot_solr_config.zip ./*
            curl -H "Content-type: application/octet-stream" --data-binary @spot_solr_config.zip "http://localhost:8983/solr/admin/configs?action=UPLOAD&name=spot"
            curl -H "Content-type: application/json" http://localhost:8983/api/collections/ -d "{create: {name: spot-test, config: spot, numShards: 1}}"

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run RSpec tests
          command: |
            bundle exec rake db:migrate
            mkdir /tmp/test-results
            ./cc-test-reporter before-build
            bundle exec rspec \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress\
              -- \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - run:
          name: Code Climate test coverate
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"

      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json

      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  upload-coverage:
    docker:
      - image: circleci/ruby:2.4.3-stretch-node-browsers
    working_directory: ~/spot

    steps:
      - attach_workspace:
          at: ~/spot
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          command: |
            ./cc-test-reporter sum-coverage --output - codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

workflows:
  version: 2
  ci:
    jobs:
    - bundle
    - lint:
        requires:
          - bundle
    - test:
        requires:
          - lint
    - upload-coverage:
        requires:
          - test
