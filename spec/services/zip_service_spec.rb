# I'm not crazy about these tests, but comparing shasums of zip files
# fails because the atime/mktime differs between the two files.
#
# see: https://stackoverflow.com/a/9714323
#
# this depends on the existance of:
#   a) spec/fixtures/zip-test-fixture.zip
#   b) spec/fixtures/zip-test/ (which contains)
#      1) fixture/
#      2) fixture/entry.txt
#
# zip-test-fixture.zip was generated by the following:
#
#   service = ZipService.new(src_path: Rails.root.join('spec', 'fixtures', 'zip-test'))
#   service.zip!(dest_path: Rails.root.join('spec', 'fixtures', 'zip-test-fixture.zip'))
#
RSpec.describe ZipService do
  subject(:service) { described_class.new(src_path: src_path) }

  describe '#unzip!' do
    let(:src_path) { Rails.root.join('spec', 'fixtures', 'zip-test-fixture.zip') }

    it 'unzips a file' do
      Dir.mktmpdir('spot-zip-service-spec-unzip') do |tmpdir|
        service.unzip!(dest_path: tmpdir)

        expect(file_entries(tmpdir)).to eq zip_entries(src_path)
      end
    end
  end

  describe '#zip!' do
    let(:src_path) { Rails.root.join('spec', 'fixtures', 'zip-test') }

    it 'zips a directory recursively' do
      Dir.mktmpdir('spot-zip-service-spec-zip') do |tmpdir|
        dest_path = File.join(tmpdir, 'out.zip')
        service.zip!(dest_path: dest_path)

        expect(zip_entries(dest_path)).to eq file_entries(src_path)
      end
    end
  end

  def file_entries(path)
    Dir[File.join(path, '**', '*')].map { |e| e.sub(path.to_s + '/', '') }
  end

  def zip_entries(path)
    Zip::File.new(path).entries.map { |e| e.name.gsub(/\/$/, '') }
  end
end
